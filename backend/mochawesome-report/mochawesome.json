{
  "stats": {
    "suites": 6,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-02T00:21:32.077Z",
    "end": "2023-11-02T00:21:33.264Z",
    "duration": 1187,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0cebe9b9-8716-440b-906b-544103c6c920",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dead2c4-8f76-4a83-bb40-6be139bdeb85",
          "title": "Questions API",
          "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/questions.test.js",
          "file": "/test/questions.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Questions API\"",
              "fullTitle": "Questions API \"before all\" hook in \"Questions API\"",
              "timedOut": false,
              "duration": 754,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .post('/api/users/login')\n    .send({\n        email: 'test@gmail.com',\n        password: 'test123'\n    })\n    .end((err, res) => {\n        if (err) {\n            done(err);\n        }\n        jwtToken = res.body.token;\n        done();\n    });",
              "err": {},
              "uuid": "483c3fc9-fd50-4361-916f-d83b2ff45bcf",
              "parentUUID": "6dead2c4-8f76-4a83-bb40-6be139bdeb85",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4be5eafb-71f1-41a0-aba8-d398c1becc65",
              "title": "POST /api/questions",
              "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/questions.test.js",
              "file": "/test/questions.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new question",
                  "fullTitle": "Questions API POST /api/questions should create a new question",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/questions')\n    .set('x-auth-token', jwtToken)\n    .send({ content: 'What is the meaning of life?' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body).to.have.property('content');\n        expect(res.body.content).to.equal('What is the meaning of life?');\n        done();\n    });",
                  "err": {},
                  "uuid": "5e8d2456-b866-4139-bf68-20f3fc9b99ea",
                  "parentUUID": "4be5eafb-71f1-41a0-aba8-d398c1becc65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e8d2456-b866-4139-bf68-20f3fc9b99ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b71332a2-6296-4015-8a06-cd599f9c2ac8",
              "title": "GET /api/questions/random",
              "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/questions.test.js",
              "file": "/test/questions.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch a random question",
                  "fullTitle": "Questions API GET /api/questions/random should fetch a random question",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/questions/random')\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body).to.have.property('content');\n        done();\n    });",
                  "err": {},
                  "uuid": "1681c20a-7d3b-419f-beea-7cc3d8f31eec",
                  "parentUUID": "b71332a2-6296-4015-8a06-cd599f9c2ac8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1681c20a-7d3b-419f-beea-7cc3d8f31eec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 46,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "103bd760-149b-4a53-8929-86a1a496b0ea",
          "title": "Users API",
          "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/users.test.js",
          "file": "/test/users.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a52b4930-ec4a-4c7e-9f08-45798df02900",
              "title": "POST /signup",
              "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/users.test.js",
              "file": "/test/users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should register a new user",
                  "fullTitle": "Users API POST /signup should register a new user",
                  "timedOut": false,
                  "duration": 127,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/signup')\n    .send({ email: `${randomEmail}`, password: 'password123', firstName: 'John', lastName: 'Doe' })\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token');\n        done();\n    });",
                  "err": {},
                  "uuid": "b416b910-5574-4481-aea6-65bd9f00ad32",
                  "parentUUID": "a52b4930-ec4a-4c7e-9f08-45798df02900",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a user with an existing email",
                  "fullTitle": "Users API POST /signup should not register a user with an existing email",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/signup')\n    .send({ email: `${randomEmail}`, password: 'password123', firstName: 'John', lastName: 'Doe' })\n    .end((err, res) => {\n        expect(res).to.have.status(400);\n        expect(res.body).to.have.property('msg', 'User already exists');\n        done();\n    });",
                  "err": {},
                  "uuid": "9cf0ceb2-726c-4875-b0c8-5f2a03ff3f38",
                  "parentUUID": "a52b4930-ec4a-4c7e-9f08-45798df02900",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not register a user with invalid email",
                  "fullTitle": "Users API POST /signup should not register a user with invalid email",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/signup')\n    .send({ email: 'invalidEmail', password: 'password123', firstName: 'John', lastName: 'Doe' })\n    .end((err, res) => {\n        expect(res).to.have.status(400);\n        done();\n    });",
                  "err": {},
                  "uuid": "a6d58f17-6a3a-4d0c-9963-770e69a24848",
                  "parentUUID": "a52b4930-ec4a-4c7e-9f08-45798df02900",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b416b910-5574-4481-aea6-65bd9f00ad32",
                "9cf0ceb2-726c-4875-b0c8-5f2a03ff3f38",
                "a6d58f17-6a3a-4d0c-9963-770e69a24848"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "00fdfc3e-1c1d-4d89-a925-2380b171fe4c",
              "title": "POST /login",
              "fullFile": "/Users/ritinmalhotra/repos/capstone-2024/backend/test/users.test.js",
              "file": "/test/users.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should authenticate the user and return token",
                  "fullTitle": "Users API POST /login should authenticate the user and return token",
                  "timedOut": false,
                  "duration": 102,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/login')\n    .send({ email: `${randomEmail}`, password: 'password123' })\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token');\n        expect(res.body).to.have.property('userID');\n        done();\n    });",
                  "err": {},
                  "uuid": "67bc8504-092d-4731-bed7-f3ea94dcf24b",
                  "parentUUID": "00fdfc3e-1c1d-4d89-a925-2380b171fe4c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not authenticate with wrong password",
                  "fullTitle": "Users API POST /login should not authenticate with wrong password",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/login')\n    .send({ email: 'test@test.com', password: 'wrongpassword' })\n    .end((err, res) => {\n        expect(res).to.have.status(400);\n        expect(res.body).to.have.property('msg', 'Invalid credentials');\n        done();\n    });",
                  "err": {},
                  "uuid": "7fb4ed8f-facc-4928-9bcf-cf51ae9a6566",
                  "parentUUID": "00fdfc3e-1c1d-4d89-a925-2380b171fe4c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not authenticate with non-existing email",
                  "fullTitle": "Users API POST /login should not authenticate with non-existing email",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/users/login')\n    .send({ email: 'notexist@test.com', password: 'password123' })\n    .end((err, res) => {\n        expect(res).to.have.status(400);\n        expect(res.body).to.have.property('msg', 'Invalid credentials');\n        done();\n    });",
                  "err": {},
                  "uuid": "edb722f1-5928-4f96-b5a4-f0de145cc3b1",
                  "parentUUID": "00fdfc3e-1c1d-4d89-a925-2380b171fe4c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67bc8504-092d-4731-bed7-f3ea94dcf24b",
                "7fb4ed8f-facc-4928-9bcf-cf51ae9a6566",
                "edb722f1-5928-4f96-b5a4-f0de145cc3b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}